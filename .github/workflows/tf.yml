# dynamic name ?
name: 'Terraform Module Pipeline'

on:
  push:
    branches:
      - initial
      # TODO: only run CI on review?

# required to use OIDC authentication
# permissions:
#   contents: read
#   id-token: write

defaults:
  run:
    shell: bash

jobs:
  # tfsec:
  #   name: "tfsec"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #   - name: tfsec
  #     uses: aquasecurity/tfsec-action@v1.0.0

  tflint:
    name: "tflint"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: terraform-linters/setup-tflint@v2
      name: Setup TFLint
      with:
        tflint_version: v0.38.1
    - name: Show version
      run: tflint --version
    - name: Init TFLint
      run: tflint --init
    - name: Run TFLint
      run: tflint -f compact

  terraform-validate:
    name: "validate"
    runs-on: ubuntu-latest
    needs: 
      - tflint
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

    - name: terraform validate
      run: |
        terraform init
        terraform validate

  terraform-plan:
    name: "plan"
    runs-on: ubuntu-latest
    needs: 
      - terraform-validate
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

    - name: terraform plan
      run: |
        terraform init
        terraform plan

  terraform-apply:
    name: "apply"
    needs: 
      - terraform-plan    
      # - tfsec
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

  bats-test:
    name: "bats-test"
    runs-on: ubuntu-latest
    needs: terraform-apply    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

    - name: Install bats
      run: |
        npm install -g bats@1.8.2
    - name: Run bats
      run: |
        bats bats/aws-s3-ls.sh

  terratest-todo:
    name: "terratest-todo"
    runs-on: ubuntu-latest
    needs: terraform-apply    
    steps:
    - name: Run terratest-todo
      run: |
        echo "Run something sensible"
        echo "Reference - https://github.com/gruntwork-io/terratest-todo/blob/master/test/terraform_aws_s3_example_test.go"

  terraform-destroy:
    name: "destroy"
    runs-on: ubuntu-latest
    needs: bats-test
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3
    - name: Terraform Destroy
      run: |
        terraform init
        terraform destroy -auto-approve                

  terraform-docs:
    name: "terraform-docs"
    runs-on: ubuntu-latest
    needs: terraform-apply    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Render terraform docs inside the README.md and push changes back to PR branch    
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        working-dir: .
        output-file: README.md
        output-method: inject
        git-push: "true"        
