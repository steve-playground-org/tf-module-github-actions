# dynamic name ?
name: 'Terraform Module Pipeline'

on:
  push:
    branches:
      - initial
      # TODO: only run CI on review?

# required to use OIDC authentication
# permissions:
#   contents: read
#   id-token: write

defaults:
  run:
    shell: bash

jobs:
  tfsec:
    name: "tfsec"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: tfsec
      uses: aquasecurity/tfsec-action@v1.0.0

  terraform-plan:
    name: "plan"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

    - name: Terraform Plan
      run: |
        terraform init
        terraform plan

  terraform-apply:
    name: "apply"
    needs: terraform-plan    
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

  terraform-destroy:
    name: "destroy"
    runs-on: ubuntu-latest
    needs: terraform-apply    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
        aws-region: eu-west-3

    - name: Terraform Destroy
      run: |
        terraform init
        terraform destroy -auto-approve                
        
        # TODO: depends